package prob0719;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;

public final class Maps {
    public static final Map<String, Mnemon> unaryMnemonTable;
    public static final Map<Mnemon, String> unaryMnemonStringTable;
    public static final Map<String, Mnemon> nonUnaryMnemonTable;
    public static final Map<Mnemon, String> mnemonStringTable;
    public static final Map<Mnemon, Integer> mnemonIntTable;
    public static final Map<Mnemon, Integer> unaryMnemonIntTable;
    public static final Map<String, dotCommand> dotCommandTable1;
    public static final Map<String, dotCommand> dotCommandTable2;
    public static final Map<dotCommand,String> dotCommandStringTable;
    public static final Map<String,addressingMode> addressingModeTable;
    public static final Map<addressingMode,String> addressingModeStringTable;
    static {
        unaryMnemonTable = new HashMap<>();
        unaryMnemonTable.put("STOP", Mnemon.M_STOP);
        unaryMnemonTable.put("ASLA", Mnemon.M_ASLA);
        unaryMnemonTable.put("ASRA", Mnemon.M_ASRA);
        unaryMnemonStringTable = new EnumMap<>(Mnemon.class);
        unaryMnemonStringTable.put(Mnemon.M_STOP,"STOP");
        unaryMnemonStringTable.put(Mnemon.M_ASLA,"ASLA");
        unaryMnemonStringTable.put(Mnemon.M_ASRA,"ASRA");
        nonUnaryMnemonTable = new HashMap<>();
        nonUnaryMnemonTable.put("BR", Mnemon.M_BR);
        nonUnaryMnemonTable.put("BRLT", Mnemon.M_BRLT);
        nonUnaryMnemonTable.put("BREQ", Mnemon.M_BREQ);
        nonUnaryMnemonTable.put("BRLE", Mnemon.M_BRLE);
        nonUnaryMnemonTable.put("CPWA", Mnemon.M_CPWA);
        nonUnaryMnemonTable.put("DECI", Mnemon.M_DECI);
        nonUnaryMnemonTable.put("DECO", Mnemon.M_DECO);
        nonUnaryMnemonTable.put("ADDA", Mnemon.M_ADDA);
        nonUnaryMnemonTable.put("SUBA", Mnemon.M_SUBA);
        nonUnaryMnemonTable.put("STWA", Mnemon.M_STWA);
        nonUnaryMnemonTable.put("LDWA", Mnemon.M_LDWA);
        mnemonStringTable = new EnumMap<>(Mnemon.class);
        mnemonStringTable.put(Mnemon.M_BR, "BR");
        mnemonStringTable.put(Mnemon.M_BRLT, "BRLT");
        mnemonStringTable.put(Mnemon.M_BREQ, "BREQ");
        mnemonStringTable.put(Mnemon.M_BRLE, "BRLE");
        mnemonStringTable.put(Mnemon.M_CPWA, "CPWA");
        mnemonStringTable.put(Mnemon.M_DECI, "DECI");
        mnemonStringTable.put(Mnemon.M_DECO, "DECO");
        mnemonStringTable.put(Mnemon.M_ADDA, "ADDA");
        mnemonStringTable.put(Mnemon.M_SUBA, "SUBA");
        mnemonStringTable.put(Mnemon.M_STWA, "STWA");
        mnemonStringTable.put(Mnemon.M_LDWA, "LDWA");
        dotCommandTable1 = new HashMap<>();
        dotCommandTable1.put(".BLOCK", dotCommand.DC_BLOCK);
        dotCommandTable2 = new HashMap<>();
        dotCommandTable2.put(".END", dotCommand.DC_END);
        dotCommandStringTable = new EnumMap<>(dotCommand.class);
        dotCommandStringTable.put(dotCommand.DC_BLOCK, ".BLOCK");
        dotCommandStringTable.put(dotCommand.DC_END, ".END");
        addressingModeTable = new HashMap<>();
        addressingModeTable.put("i", addressingMode.A_I );
        addressingModeTable.put("d", addressingMode.A_D);
        addressingModeTable.put("n", addressingMode.A_N);
        addressingModeTable.put("s", addressingMode.A_S);
        addressingModeTable.put("sf", addressingMode.A_SF);
        addressingModeTable.put("x", addressingMode.A_X);
        addressingModeTable.put("sx", addressingMode.A_SX);
        addressingModeTable.put("sfx", addressingMode.A_SFX);
        addressingModeTable.put("", addressingMode.A_EMPTY);
        addressingModeStringTable = new EnumMap<>(addressingMode.class);
        addressingModeStringTable.put(addressingMode.A_I, "i");
        addressingModeStringTable.put(addressingMode.A_D, "d");
        addressingModeStringTable.put(addressingMode.A_N, "n");
        addressingModeStringTable.put(addressingMode.A_S, "s");
        addressingModeStringTable.put(addressingMode.A_SF, "sf");
        addressingModeStringTable.put(addressingMode.A_X, "x");
        addressingModeStringTable.put(addressingMode.A_SX, "sx");
        addressingModeStringTable.put(addressingMode.A_SFX, "sfx");
        addressingModeStringTable.put(addressingMode.A_EMPTY, "");
        mnemonIntTable = new EnumMap<>(Mnemon.class);
        mnemonIntTable.put(Mnemon.M_BR, 18);
        mnemonIntTable.put(Mnemon.M_BRLT, 22);
        mnemonIntTable.put(Mnemon.M_BREQ, 24);
        mnemonIntTable.put(Mnemon.M_BRLE, 20);
        mnemonIntTable.put(Mnemon.M_CPWA, 160);
        mnemonIntTable.put(Mnemon.M_DECI, 48);
        mnemonIntTable.put(Mnemon.M_DECO, 56);
        mnemonIntTable.put(Mnemon.M_ADDA, 96);
        mnemonIntTable.put(Mnemon.M_SUBA, 112);
        mnemonIntTable.put(Mnemon.M_STWA, 224);
        mnemonIntTable.put(Mnemon.M_LDWA, 192);
        unaryMnemonIntTable = new EnumMap<>(Mnemon.class);
        unaryMnemonIntTable.put(Mnemon.M_STOP, 0);
        unaryMnemonIntTable.put(Mnemon.M_ASLA, 10);
        unaryMnemonIntTable.put(Mnemon.M_ASRA, 12);
    }
}
